apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    {{ if ne .Values.clusterIssuer "none" }}
    cert-manager.io/cluster-issuer: "{{ .Values.clusterIssuer }}"
    {{ end }}

    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/proxy-body-size: "256m"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "16k"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "10"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"

    # ciphers order from older ingress-nginx version, which works for Alexa REST endpoint expectations
    nginx.ingress.kubernetes.io/ssl-ciphers: "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256"
  name: {{ .Release.Name }}
spec:
  {{ if ne .Values.ingressClassName "none" }}
  ingressClassName: {{ .Values.ingressClassName }}
  {{ end }}

  rules:
    - host: {{ .Values.hostName }}.{{ .Values.baseDomain }}
      http:
        paths:
          - path: /admin
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}
                port:
                  number: {{ .Values.app.port }}

  {{ if ne .Values.clusterIssuer "none" }}
  tls:
    - hosts:
        - {{ .Values.hostName }}.{{ .Values.baseDomain }}
      secretName: {{ .Values.hostName }}-tls
  {{ end }}
