stages:
  - build
  - deploy

build unstable:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.8.0-debug
    entrypoint: [ "" ]
  only:
    refs:
      - develop
  script:
    - if [ -z "$TARGET" ]; then DOCKERFILE=Dockerfile; SUFFIX=""; else DOCKERFILE="$TARGET.Dockerfile"; SUFFIX="-$TARGET"; fi;
    - mkdir -p /kaniko/.docker && echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - GODEBUG="http2client=0" /kaniko/executor
      --context .
      --compressed-caching=false
      --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
      --build-arg VERSION=$CI_COMMIT_SHORT_SHA
      --build-arg IS_MAIN="False"
      --force

build release:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.8.0-debug
    entrypoint: [ "" ]
  only:
    refs:
      - tags
  script:
    - if [ -z "$TARGET" ]; then DOCKERFILE=Dockerfile; SUFFIX=""; else DOCKERFILE="$TARGET.Dockerfile"; SUFFIX="-$TARGET"; fi;
    - mkdir -p /kaniko/.docker && echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - GODEBUG="http2client=0" /kaniko/executor
      --context .
      --compressed-caching=false
      --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
      --build-arg VERSION=$CI_COMMIT_TAG
      --build-arg IS_MAIN="True"

.deploy:
  stage: deploy
  image: registry.gitlab.com/promethistai/system/deployer:211222
  variables:
    KUBE_CONTEXT: promethistai-projects/ciirc-projects/selfservice/kronos:ciirc-aks
    NAMESPACE: develop
    NAME: maestro-admin
    NAME_SUFFIX: ""
    VERSION: $CI_COMMIT_SHORT_SHA
    BASE_DOMAIN: promethist.dev
    SECRET_PROVIDER_CLASS: azure-secret-provider
    SECRETS_NAME: admin-develop
    SERVICE_ACCOUNT_NAME: default
  only:
    refs:
      - develop
  script:
    - kubectl config use-context $KUBE_CONTEXT
    - /bin/sh deploy/prepare-namespace.sh $NAMESPACE
    - helm upgrade
      --install
      --namespace $NAMESPACE
      --set namespace=$NAMESPACE
      --set name=$NAME
      --set nameSuffix=$NAME_SUFFIX
      --set version=$VERSION
      --set app.image.name=$CI_REGISTRY_IMAGE
      --set app.image.tag=$VERSION
      --set baseDomain=$BASE_DOMAIN
      --set secretProviderClass=$SECRET_PROVIDER_CLASS
      --set secretsName=$SECRETS_NAME
      --set serviceAccountName=$SERVICE_ACCOUNT_NAME
      --reset-values
      --debug
      $NAME deploy/app

deploy unstable:
  extends: .deploy

deploy release:
  extends: .deploy
  variables:
    NAMESPACE: default
    VERSION: $CI_COMMIT_TAG
    BASE_DOMAIN: promethist.ai
    SECRETS_NAME: admin
  only:
    refs:
      - tags

deploy mf:
  extends: .deploy
  variables:
    KUBE_CONTEXT: promethistai-projects/ciirc-projects/selfservice/devops:mf-aks
    NAMESPACE: default
    NAME_SUFFIX: mf
    VERSION: $CI_COMMIT_TAG
    BASE_DOMAIN: promethist.dev
    SECRETS_NAME: admin
  only:
    refs:
      - tags
  when: manual

deploy smart-sop:
  extends: .deploy
  variables:
    KUBE_CONTEXT: promethistai-projects/ciirc-projects/selfservice/devops:smart-sop
    NAMESPACE: smart-sop
    NAME: admin
    VERSION: $CI_COMMIT_TAG
    BASE_DOMAIN: k8s-sop.czech-itc.cz
    SECRET_PROVIDER_CLASS: vault-secret-provider
    SECRETS_NAME: $NAME
    SERVICE_ACCOUNT_NAME: smart-sop-secrets-test
  only:
    refs:
      - tags
  when: manual
