stages:
  - version
  - build
  - deploy

variables:
  # Keep all existing variables
  VITE_KEYCLOAK_CLIENT_ID_DEVELOPMENT: $VITE_KEYCLOAK_CLIENT_ID_DEVELOPMENT
  VITE_KEYCLOAK_CLIENT_ID_PRODUCTION: $VITE_KEYCLOAK_CLIENT_ID_PRODUCTION
  VITE_KEYCLOAK_REALM: $VITE_KEYCLOAK_REALM
  VITE_KEYCLOAK_URL: $VITE_KEYCLOAK_URL
  VITE_KRONOS_API_KEY_DEVELOPMENT: $VITE_KRONOS_API_KEY_DEVELOPMENT
  VITE_KRONOS_API_KEY_PRODUCTION: $VITE_KRONOS_API_KEY_PRODUCTION
  VITE_KRONOS_URL_DEVELOPMENT: $VITE_KRONOS_URL_DEVELOPMENT
  VITE_KRONOS_URL_PRODUCTION: $VITE_KRONOS_URL_PRODUCTION
  VITE_MAESTRO_URL_DEVELOPMENT: $VITE_MAESTRO_URL_DEVELOPMENT
  VITE_MAESTRO_URL_PRODUCTION: $VITE_MAESTRO_URL_PRODUCTION
  NODE_VERSION: "18"

# Version job using semantic versioning (X.Y.Z format)
version:
  stage: version
  image: node:${NODE_VERSION}
  only:
    refs:
      - develop
      - tags
  script:
    # Install package for semantic versioning
    - npm install --no-save semver
    
    # Check if package.json exists and contains a version
    - |
      if [ -f package.json ]; then
        CURRENT_VERSION=$(node -p "require('./package.json').version || '0.1.0'")
      else
        CURRENT_VERSION="0.1.0"
        echo '{"version": "0.1.0"}' > package.json
      fi
      echo "Current version: $CURRENT_VERSION"
    
    # Determine version increment type based on commit message
    - |
      if [[ "$CI_COMMIT_MESSAGE" =~ ^feat(\(.+\))?!:.*$ ]] || [[ "$CI_COMMIT_MESSAGE" =~ ^BREAKING[\s-]CHANGE:.*$ ]]; then
        INCREMENT_TYPE="major"
      elif [[ "$CI_COMMIT_MESSAGE" =~ ^feat(\(.+\))?:.*$ ]]; then
        INCREMENT_TYPE="minor"
      elif [[ "$CI_COMMIT_MESSAGE" =~ ^fix(\(.+\))?:.*$ ]]; then
        INCREMENT_TYPE="patch"
      else
        INCREMENT_TYPE="patch"  # Default to patch for other commit types
      fi
      echo "Detected version increment type: $INCREMENT_TYPE"
    
    # Calculate new version
    - |
      if [[ "$CI_COMMIT_REF_NAME" == "develop" ]]; then
        # For develop branch, increment based on commit type
        NEW_VERSION=$(node -e "console.log(require('semver').inc('$CURRENT_VERSION', '$INCREMENT_TYPE'))")
        VERSION_SUFFIX=""
      else
        # For tags, use the tag as the version (usually for releases)
        NEW_VERSION=$CI_COMMIT_REF_NAME
        # Remove 'v' prefix if present
        if [[ "$NEW_VERSION" == v* ]]; then
          NEW_VERSION=${NEW_VERSION:1}
        fi
        VERSION_SUFFIX=""
      fi
      
      # Final version string
      FULL_VERSION="${NEW_VERSION}${VERSION_SUFFIX}"
      echo "New version: $FULL_VERSION"
      
      # Save version to file for other jobs
      echo "$FULL_VERSION" > VERSION.txt
  artifacts:
    paths:
      - VERSION.txt
    expire_in: 1 day

# Existing build jobs modified to use semantic versioning
build unstable:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.8.0-debug
    entrypoint: [ "" ]
  only:
    refs:
      - develop
  script:
    - if [ -z "$TARGET" ]; then DOCKERFILE=Dockerfile; SUFFIX=""; else DOCKERFILE="$TARGET.Dockerfile"; SUFFIX="-$TARGET"; fi;
    - mkdir -p /kaniko/.docker && echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - VERSION=$(cat VERSION.txt)
    - GODEBUG="http2client=0" /kaniko/executor
      --context .
      --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
      --destination $CI_REGISTRY_IMAGE:$VERSION
      --compressed-caching=false
      --build-arg VERSION=$VERSION
      --build-arg IS_MAIN="False"
      --build-arg VITE_ENVIRONMENT="DEVELOPMENT"
      --build-arg VITE_KEYCLOAK_CLIENT_ID=$VITE_KEYCLOAK_CLIENT_ID_DEVELOPMENT
      --build-arg VITE_KEYCLOAK_REALM=$VITE_KEYCLOAK_REALM
      --build-arg VITE_KEYCLOAK_URL=$VITE_KEYCLOAK_URL
      --build-arg VITE_KRONOS_API_KEY=$VITE_KRONOS_API_KEY_DEVELOPMENT
      --build-arg VITE_KRONOS_URL=$VITE_KRONOS_URL_DEVELOPMENT
      --build-arg VITE_MAESTRO_URL=$VITE_MAESTRO_URL_DEVELOPMENT
      --force
  dependencies:
    - version

# Rest of your jobs stay the same, just ensure they all use VERSION.txt
build release:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.8.0-debug
    entrypoint: [ "" ]
  only:
    refs:
      - tags
  except:
    - /^(!main).+@/
  script:
    - if [ -z "$TARGET" ]; then DOCKERFILE=Dockerfile; SUFFIX=""; else DOCKERFILE="$TARGET.Dockerfile"; SUFFIX="-$TARGET"; fi;
    - mkdir -p /kaniko/.docker && echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - VERSION=$(cat VERSION.txt)
    - GODEBUG="http2client=0" /kaniko/executor
      --context .
      --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
      --destination $CI_REGISTRY_IMAGE:$VERSION
      --compressed-caching=false
      --build-arg VERSION=$VERSION
      --build-arg IS_MAIN="True"
      --build-arg VITE_ENVIRONMENT="PRODUCTION"
      --build-arg VITE_KEYCLOAK_CLIENT_ID=$VITE_KEYCLOAK_CLIENT_ID_PRODUCTION
      --build-arg VITE_KEYCLOAK_REALM=$VITE_KEYCLOAK_REALM
      --build-arg VITE_KEYCLOAK_URL=$VITE_KEYCLOAK_URL
      --build-arg VITE_KRONOS_API_KEY=$VITE_KRONOS_API_KEY_PRODUCTION
      --build-arg VITE_KRONOS_URL=$VITE_KRONOS_URL_PRODUCTION
      --build-arg VITE_MAESTRO_URL=$VITE_MAESTRO_URL_PRODUCTION
  dependencies:
    - version

deploy unstable:
  stage: deploy
  image: registry.gitlab.com/promethistai/system/deployer:211222
  variables:
    NAME: maestro-admin
  only:
    refs:
      - develop
  script:
    - kubectl config use-context $CI_PROJECT_NAMESPACE/kronos:ciirc-aks
    - /bin/sh deploy/prepare-namespace.sh develop
    - VERSION=$(cat VERSION.txt)
    - helm upgrade
      --install
      --namespace develop
      --set namespace=develop
      --set version=$VERSION
      --set app.image.name=$CI_REGISTRY_IMAGE
      --set app.image.tag=$VERSION
      --set imagePullPolicy=Always
      --set baseDomain=promethist.dev
      --set name=$NAME
      --reset-values
      --debug
      $NAME deploy/app
  dependencies:
    - version

deploy release:
  stage: deploy
  image: registry.gitlab.com/promethistai/system/deployer:211222
  variables:
    NAME: maestro-admin
  only:
    refs:
      - tags
  except:
    - /^(!main).+@/
  script:
    - kubectl config use-context $CI_PROJECT_NAMESPACE/kronos:ciirc-aks
    - /bin/sh deploy/prepare-namespace.sh default
    - VERSION=$(cat VERSION.txt)
    - helm upgrade
      --install
      --namespace default
      --set namespace=default
      --set version=$VERSION
      --set app.image.name=$CI_REGISTRY_IMAGE
      --set app.image.tag=$VERSION
      --set imagePullPolicy=Always
      --set baseDomain=promethist.ai
      --set name=$NAME
      --reset-values
      --debug
      $NAME deploy/app
  dependencies:
    - version