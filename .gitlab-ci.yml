image: node:18

stages:
  - build
  - deploy

variables:
  VITE_ENVIRONMENT: $VITE_ENVIRONMENT
  VITE_ANALYTICAL_URL_PRODUCTION: $VITE_ANALYTICAL_URL_PRODUCTION
  VITE_ANALYTICAL_URL_DEVELOPMENT: $VITE_ANALYTICAL_URL_DEVELOPMENT
  VITE_DOCRETR_URL_DEVELOPMENT: $VITE_DOCRETR_URL_DEVELOPMENT
  VITE_DOCRETR_API_KEY_DEVELOPMENT: $VITE_DOCRETR_API_KEY_DEVELOPMENT
  VITE_KRONOS_URL_PRODUCTION: $VITE_KRONOS_URL_PRODUCTION
  VITE_KRONOS_URL_DEVELOPMENT: $VITE_KRONOS_URL_DEVELOPMENT
  VITE_KRONOS_API_KEY_PRODUCTION: $VITE_KRONOS_API_KEY_PRODUCTION
  VITE_KRONOS_API_KEY_DEVELOPMENT: $VITE_KRONOS_API_KEY_DEVELOPMENT
  VITE_KEYCLOACK_CLIENT_ID: $VITE_KEYCLOACK_CLIENT_ID
  VITE_KEYCLOACK_PRODUCTION_CLIENT_ID: $VITE_KEYCLOACK_PRODUCTION_CLIENT_ID
  VITE_KEYCLOACK_REALM: $VITE_KEYCLOACK_REALM
  VITE_KEYCLOACK_URL: $VITE_KEYCLOACK_URL
  FIREBASE_TOKEN: $FIREBASE_TOKEN

build:
  stage: build
  script:
    # Step 1: Create the .env file dynamically with expanded environment variables
    - echo "Creating .env file for Vite..."
    - |
      echo "VITE_ENVIRONMENT=$VITE_ENVIRONMENT" > .env
      echo "VITE_ANALYTICAL_URL_PRODUCTION=$VITE_ANALYTICAL_URL_PRODUCTION" >> .env
      echo "VITE_ANALYTICAL_URL_DEVELOPMENT=$VITE_ANALYTICAL_URL_DEVELOPMENT" >> .env
      echo "VITE_DOCRETR_URL_DEVELOPMENT=$VITE_DOCRETR_URL_DEVELOPMENT" >> .env
      echo "VITE_DOCRETR_API_KEY_DEVELOPMENT=$VITE_DOCRETR_API_KEY_DEVELOPMENT" >> .env
      echo "VITE_KRONOS_URL_PRODUCTION=$VITE_KRONOS_URL_PRODUCTION" >> .env
      echo "VITE_KRONOS_URL_DEVELOPMENT=$VITE_KRONOS_URL_DEVELOPMENT" >> .env
      echo "VITE_KRONOS_API_KEY_PRODUCTION=$VITE_KRONOS_API_KEY_PRODUCTION" >> .env
      echo "VITE_KRONOS_API_KEY_DEVELOPMENT=$VITE_KRONOS_API_KEY_DEVELOPMENT" >> .env
      echo "VITE_KEYCLOACK_CLIENT_ID=$VITE_KEYCLOACK_CLIENT_ID" >> .env
      echo "VITE_KEYCLOACK_PRODUCTION_CLIENT_ID=$VITE_KEYCLOACK_PRODUCTION_CLIENT_ID" >> .env
      echo "VITE_KEYCLOACK_REALM=$VITE_KEYCLOACK_REALM" >> .env
      echo "VITE_KEYCLOACK_URL=$VITE_KEYCLOACK_URL" >> .env
      echo "FIREBASE_TOKEN=$FIREBASE_TOKEN" >> .env

    # Step 2: Verify that the .env file was created correctly
    - cat .env

    # Step 3: Install dependencies
    - npm install

    # Step 4: Build the project and generate the 'dist' directory
    - npm run build

  artifacts:
    paths:
      - dist
      - .env
    expire_in: 1 hour

# test:
#   stage: test
#   script:
#     - echo "Test stage - Empty for now"

deploy:
  stage: deploy
  dependencies:
    - build
  script:
    # Step 1: Install Firebase CLI
    - npm install -g firebase-tools

    # Step 2: Verify that the 'dist' directory exists
    - ls -al dist

    # Step 3: Deploy to Firebase using the Firebase token
    - echo "Deploying to Firebase with token $FIREBASE_TOKEN"
    - firebase deploy --only hosting --token $FIREBASE_TOKEN --project sop-generator

  only:
    - main # Run only on the 'main' branch
