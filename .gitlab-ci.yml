image: node:18

stages:
  - build
  - deploy

variables:
  VITE_ANALYTICAL_URL_PRODUCTION: $VITE_ANALYTICAL_URL_PRODUCTION
  VITE_ANALYTICAL_URL_DEVELOPMENT: $VITE_ANALYTICAL_URL_DEVELOPMENT
  VITE_DOCRETR_URL_DEVELOPMENT: $VITE_DOCRETR_URL_DEVELOPMENT
  VITE_DOCRETR_API_KEY_DEVELOPMENT: $VITE_DOCRETR_API_KEY_DEVELOPMENT
  VITE_KRONOS_URL_PRODUCTION: $VITE_KRONOS_URL_PRODUCTION
  VITE_KRONOS_URL_DEVELOPMENT: $VITE_KRONOS_URL_DEVELOPMENT
  VITE_KRONOS_API_KEY_PRODUCTION: $VITE_KRONOS_API_KEY_PRODUCTION
  VITE_MAESTRO_URL_PRODUCTION: $VITE_MAESTRO_URL_PRODUCTION
  VITE_MAESTRO_URL_DEVELOPMENT: $VITE_MAESTRO_URL_DEVELOPMENT
  VITE_KRONOS_API_KEY_DEVELOPMENT: $VITE_KRONOS_API_KEY_DEVELOPMENT
  VITE_KEYCLOACK_CLIENT_ID: $VITE_KEYCLOACK_CLIENT_ID
  VITE_KEYCLOACK_PRODUCTION_CLIENT_ID: $VITE_KEYCLOACK_PRODUCTION_CLIENT_ID
  VITE_KEYCLOACK_REALM: $VITE_KEYCLOACK_REALM
  VITE_KEYCLOACK_URL: $VITE_KEYCLOACK_URL
  VITE_KEYCLOACK_DEVELOPMENT_CLIENT_ID: $VITE_KEYCLOACK_DEVELOPMENT_CLIENT_ID
  FIREBASE_TOKEN: $FIREBASE_TOKEN
  AZURE_TOKEN_PROD: $AZURE_TOKEN_PROD
  AZURE_TOKEN_DEV: $AZURE_TOKEN_DEV

build:
  stage: build
  script:
    # Step 1: Set environment based on branch
    - echo "Checking branch $CI_COMMIT_REF_NAME"
    - |
      if [[ "$CI_COMMIT_REF_NAME" == "main" ]]; then
        export VITE_ENVIRONMENT=PRODUCTION
        echo "Setting environment to production"
      elif [[ "$CI_COMMIT_REF_NAME" == "development" ]]; then
        export VITE_ENVIRONMENT=DEVELOPMENT
        echo "Setting environment to development"
      else
        export VITE_ENVIRONMENT=unknown
        echo "Branch is not 'main' or 'development'. Setting environment to unknown."
      fi

    # Step 2: Create the .env file dynamically with the appropriate environment variables
    - echo "Creating .env file for Vite..."
    - |
      echo "VITE_ENVIRONMENT=$VITE_ENVIRONMENT" > .env
      echo "VITE_ANALYTICAL_URL_PRODUCTION=$VITE_ANALYTICAL_URL_PRODUCTION" >> .env
      echo "VITE_ANALYTICAL_URL_DEVELOPMENT=$VITE_ANALYTICAL_URL_DEVELOPMENT" >> .env
      echo "VITE_DOCRETR_URL_DEVELOPMENT=$VITE_DOCRETR_URL_DEVELOPMENT" >> .env
      echo "VITE_DOCRETR_API_KEY_DEVELOPMENT=$VITE_DOCRETR_API_KEY_DEVELOPMENT" >> .env
      echo "VITE_KRONOS_URL_PRODUCTION=$VITE_KRONOS_URL_PRODUCTION" >> .env
      echo "VITE_KRONOS_URL_DEVELOPMENT=$VITE_KRONOS_URL_DEVELOPMENT" >> .env
      echo "VITE_MAESTRO_URL_DEVELOPMENT=$VITE_MAESTRO_URL_DEVELOPMENT" >> .env
      echo "VITE_MAESTRO_URL_PRODUCTION=$VITE_MAESTRO_URL_PRODUCTION" >> .env
      echo "VITE_KRONOS_API_KEY_PRODUCTION=$VITE_KRONOS_API_KEY_PRODUCTION" >> .env
      echo "VITE_KRONOS_API_KEY_DEVELOPMENT=$VITE_KRONOS_API_KEY_DEVELOPMENT" >> .env
      echo "VITE_KEYCLOACK_CLIENT_ID=$VITE_KEYCLOACK_CLIENT_ID" >> .env
      echo "VITE_KEYCLOACK_PRODUCTION_CLIENT_ID=$VITE_KEYCLOACK_PRODUCTION_CLIENT_ID" >> .env
      echo "VITE_KEYCLOACK_REALM=$VITE_KEYCLOACK_REALM" >> .env
      echo "VITE_KEYCLOACK_URL=$VITE_KEYCLOACK_URL" >> .env
      echo "FIREBASE_TOKEN=$FIREBASE_TOKEN" >> .env
      echo "VITE_KEYCLOACK_DEVELOPMENT_CLIENT_ID=$VITE_KEYCLOACK_DEVELOPMENT_CLIENT_ID" >> .env

    # Step 3: Verify that the .env file was created correctly
    - cat .env

    # Step 4: Install dependencies
    - npm install

    # Step 6: Build the project and generate the 'dist' directory
    - npm run build

  artifacts:
    paths:
      - dist
      - .env
    expire_in: 1 hour

deploy:
  stage: deploy
  image: registry.gitlab.com/static-web-apps/azure-static-web-apps-deploy
  script:
    - |
      echo "Determining branch for deployment..."
      if [ "$CI_COMMIT_REF_NAME" = "main" ]; then
         echo "Deploying to production environment..."
         export API_TOKEN="$AZURE_TOKEN_PROD"
      elif [ "$CI_COMMIT_REF_NAME" = "development" ]; then
         echo "Deploying to development environment..."
         export API_TOKEN="$AZURE_TOKEN_DEV"
      else
         echo "Branch $CI_COMMIT_REF_NAME is not configured for deployment. Skipping."
         exit 0
      fi

      # Define the app source and output directories.
      export APP_PATH="$CI_PROJECT_DIR/"
      export OUTPUT_PATH="$CI_PROJECT_DIR/dist"

      # For debugging purposes, show the values.
      echo "Using API_TOKEN: ${API_TOKEN:0:8}... (redacted)"
      echo "APP_PATH: $APP_PATH"
      echo "OUTPUT_PATH: $OUTPUT_PATH"
      
      # Call the Azure Static Web Apps deploy command with the required parameters.
      azure-static-web-apps-deploy --verbose --api-token "$API_TOKEN" --app "$APP_PATH" --output-location "$OUTPUT_PATH"
  only:
    - main
    - development